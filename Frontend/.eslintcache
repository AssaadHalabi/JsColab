[{"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\index.tsx":"1","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Notebook.tsx":"2","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Home.tsx":"3","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Notebooks.tsx":"4","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\CreateNotebook.tsx":"5","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Help.tsx":"6","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\auth\\Login.tsx":"7","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\index.ts":"8","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\firebase.js":"9","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\fetchNotebook.ts":"10","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\use-actions.ts":"11","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\utils\\getNotebooks.ts":"12","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\Navbar.tsx":"13","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\Modal.tsx":"14","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\cell-list.tsx":"15","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\store.ts":"16","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\cell.ts":"17","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\use-typed-selector.ts":"18","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\add-cell.tsx":"19","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\cell-list-item.tsx":"20","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\action-creators\\index.ts":"21","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\index.ts":"22","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\middlewares\\persist-middlware.ts":"23","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\action-bar.tsx":"24","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\code-cell.tsx":"25","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\text-editor.tsx":"26","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\bundlesReducer.ts":"27","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\userReducer.ts":"28","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\cellsReducer.ts":"29","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\use-cumulative-code.ts":"30","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\resizable.tsx":"31","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\action-types\\index.ts":"32","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\preview.tsx":"33","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\bundler\\index.ts":"34","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\bundler\\plugins\\fetch-plugin.ts":"35","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\bundler\\plugins\\unpkg-path-plugin.ts":"36","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\code-editor.tsx":"37"},{"size":1541,"mtime":1689919251630,"results":"38","hashOfConfig":"39"},{"size":2358,"mtime":1689919251635,"results":"40","hashOfConfig":"39"},{"size":5470,"mtime":1717085476279,"results":"41","hashOfConfig":"39"},{"size":5596,"mtime":1717019788916,"results":"42","hashOfConfig":"39"},{"size":2381,"mtime":1717019788910,"results":"43","hashOfConfig":"39"},{"size":2528,"mtime":1689919251633,"results":"44","hashOfConfig":"39"},{"size":2612,"mtime":1689919251592,"results":"45","hashOfConfig":"39"},{"size":134,"mtime":1689919251644,"results":"46","hashOfConfig":"39"},{"size":2645,"mtime":1717019788903,"results":"47","hashOfConfig":"39"},{"size":940,"mtime":1717019788907,"results":"48","hashOfConfig":"39"},{"size":348,"mtime":1689919251626,"results":"49","hashOfConfig":"39"},{"size":602,"mtime":1717019788924,"results":"50","hashOfConfig":"39"},{"size":3920,"mtime":1689919251591,"results":"51","hashOfConfig":"39"},{"size":927,"mtime":1689919251591,"results":"52","hashOfConfig":"39"},{"size":2553,"mtime":1689919251597,"results":"53","hashOfConfig":"39"},{"size":794,"mtime":1689919251656,"results":"54","hashOfConfig":"39"},{"size":167,"mtime":1689919251643,"results":"55","hashOfConfig":"39"},{"size":186,"mtime":1689919251629,"results":"56","hashOfConfig":"39"},{"size":1340,"mtime":1689919251595,"results":"57","hashOfConfig":"39"},{"size":1016,"mtime":1689919251596,"results":"58","hashOfConfig":"39"},{"size":3797,"mtime":1717019788920,"results":"59","hashOfConfig":"39"},{"size":376,"mtime":1689919251653,"results":"60","hashOfConfig":"39"},{"size":1306,"mtime":1689919251647,"results":"61","hashOfConfig":"39"},{"size":1500,"mtime":1689919251594,"results":"62","hashOfConfig":"39"},{"size":2113,"mtime":1689919251598,"results":"63","hashOfConfig":"39"},{"size":1569,"mtime":1689919251603,"results":"64","hashOfConfig":"39"},{"size":944,"mtime":1689919251651,"results":"65","hashOfConfig":"39"},{"size":585,"mtime":1689919251654,"results":"66","hashOfConfig":"39"},{"size":2673,"mtime":1689919251652,"results":"67","hashOfConfig":"39"},{"size":1185,"mtime":1689919251627,"results":"68","hashOfConfig":"39"},{"size":1784,"mtime":1689919251602,"results":"69","hashOfConfig":"39"},{"size":469,"mtime":1689919251640,"results":"70","hashOfConfig":"39"},{"size":1564,"mtime":1689919251601,"results":"71","hashOfConfig":"39"},{"size":988,"mtime":1689919251585,"results":"72","hashOfConfig":"39"},{"size":1863,"mtime":1689919251587,"results":"73","hashOfConfig":"39"},{"size":860,"mtime":1689919251588,"results":"74","hashOfConfig":"39"},{"size":2324,"mtime":1689919251599,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"10jua0v",{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"78"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"78"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\index.tsx",[],["158","159"],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Notebook.tsx",["160","161"],"import { Snackbar } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport CellList from \"../components/editors/cell-list\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport { auth } from \"../firebase\";\r\nimport { fetchNotebook } from \"../hooks/fetchNotebook\";\r\nimport { Notebook } from \"../state/notebook\";\r\n\r\nexport const NotebookPage: React.FC = () => {\r\n  const { notebook_id } = useParams();\r\n  const [notebook, setNotebook] = useState<Notebook>();\r\n  const [open, setOpen] = useState(false);\r\n  const [fetched, setfetched] = useState(false);\r\n  const navigate = useNavigate();\r\n  const [user, loading] = useAuthState(auth);\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) navigate(`/login/${btoa(window.location.pathname.slice(1))}`);\r\n    if (!notebook_id) {\r\n      navigate(\"/notebooks\");\r\n    }\r\n    const fetchNotebookAndPopulateLocalStorage = async () => {\r\n      try {\r\n        let result = await fetchNotebook(notebook_id || \"\");\r\n        await setNotebook(result);\r\n        await setfetched(true);\r\n        if (user?.email !== result.owner_email) {\r\n          setOpen(true);\r\n        }\r\n      } catch (error: any) {\r\n        console.error(error.message);\r\n      }\r\n    };\r\n    fetchNotebookAndPopulateLocalStorage();\r\n  }, [user, loading]);\r\n\r\n  const handleClick = ()=>{\r\n    setOpen(!open);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <Snackbar\r\n        anchorOrigin={{ vertical:'top' , horizontal:\"center\" }}\r\n        onClick={handleClick}\r\n        open={open}\r\n        // onClose={handleClose}\r\n        message= \"Viewer Mode (Edit-mode is for the Notebook owner)\"\r\n        key={'top' + 'center'}\r\n      />\r\n      {notebook && !loading && fetched && (\r\n        <CellList notebook={notebook} user={user} />\r\n      )  }\r\n      {!notebook && !loading && fetched && (\r\n        <div\r\n    style={{\r\n    fontSize: \"2em\",\r\n    fontFamily: \"sans-serif\",\r\n    color: \"rgb(206, 17, 38)\",\r\n    position:'absolute',\r\n    left: `${window.screen.width * 0.35}px`,\r\n    top: `${window.screen.height * 0.4}px`,\r\n    whiteSpace: \"pre-wrap\",\r\n    flex: \"0 0 auto\",\r\n    maxHeight: \"50%\",\r\n    overflow: \"auto\"\r\n  }}\r\n>\r\n  No Notebook was found\r\n</div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Home.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Notebooks.tsx",["162"],"import { CircularProgress, Grid, Snackbar } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport \"bulmaswatch/superhero/bulmaswatch.min.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport \"../css/editors/code-cell.css\";\r\nimport \"../css/editors/notebooks.css\";\r\nimport { auth } from \"../firebase\";\r\nimport { fetchNotebook } from \"../hooks/fetchNotebook\";\r\nimport { Notebook } from \"../state/notebook\";\r\nimport { getNotebooks } from \"../utils/getNotebooks\";\r\n\r\nexport const Notebooks: React.FC = () => {\r\n  const [user, loading] = useAuthState(auth);\r\n  const [notebooks, setNotebooks] = useState<Notebook[]>([]);\r\n  const navigate = useNavigate();\r\n  const [loadingStatus, setLoading] = useState(loading);\r\n  const [status, setStatus] = useState(\"Request failed\");\r\n  const [open, setopen] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const DeleteNotebook = async (notebook_id: string) => {\r\n    const notebook = await fetchNotebook(notebook_id);\r\n    const payload = { notebook, user_email: user?.email };\r\n    try {\r\n      if (user && user.email === notebook.owner_email) {\r\n        const result = await axios.delete(`${REACT_APP_API_URL}/deleteNotebook`, {\r\n          data: payload,\r\n        });\r\n        console.log(notebook);\r\n        if (result)\r\n          setStatus(`Notebook ${notebook.name} has been deleted successfully`);\r\n        setopen(true);\r\n        setNotebooks(notebooks.filter((n) => n.id !== notebook_id));\r\n      }\r\n    } catch (err: any) {\r\n      setError(err.message);\r\n    }\r\n  };\r\n  const handleClick = () => setopen(false);\r\n\r\n  useEffect(() => {\r\n    const fetchNotebooks = async () => {\r\n      if (loading) return;\r\n      if (user && user.email) {\r\n        try {\r\n          let result = await getNotebooks(user.email);\r\n          console.log(result);\r\n\r\n          setNotebooks(result || []);\r\n          setLoading(false);\r\n          setStatus(\"\");\r\n        } catch (err: any) {\r\n          setLoading(false);\r\n          setError(err.message);\r\n        }\r\n      } else if (!loading) {\r\n        navigate(`/login/${btoa(window.location.pathname.slice(1))}`);\r\n      }\r\n    };\r\n    fetchNotebooks();\r\n  }, [user, loading]);\r\n\r\n  const renderedNotebooks = notebooks.map((notebook) => (\r\n    <tr key={notebook.id}>\r\n      <td>\r\n        <h1 className=\"is-size-4\">\r\n          <a className=\"rowlink\" href={`/notebook/${notebook.id}`}>\r\n            {notebook.name}\r\n          </a>\r\n        </h1>\r\n      </td>\r\n      <td>\r\n        <h1 className=\"is-size-4\">\r\n          {new Date(notebook.created).toDateString()}\r\n        </h1>\r\n      </td>\r\n      <td style={{ width: \"0.1%\", whiteSpace: \"nowrap\" }}>\r\n        <button\r\n          onClick={(event) => {\r\n            if (window.confirm(\"Want to delete?\")) DeleteNotebook(notebook.id);\r\n          }}\r\n          className=\"delete\"\r\n        />\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  const emptyNotebooksCondition =\r\n    notebooks.length === 0 &&\r\n    !loading &&\r\n    !error &&\r\n    !(status === \"Request failed\");\r\n  const notebooksNotEmptyCondition = notebooks.length > 0 && !loading && !error;\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Snackbar\r\n        anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }}\r\n        onClick={handleClick}\r\n        open={open}\r\n        // onClose={handleClose}\r\n        message={status}\r\n        key={\"top center\"}\r\n      />\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\" />\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">Your JSColab Notebook</p>\r\n            <button\r\n              className=\"delete\"\r\n              aria-label=\"close\"\r\n              onClick={(e) => navigate(\"/\")}\r\n            />\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            {loadingStatus && (\r\n              <Grid item>\r\n                <CircularProgress variant=\"indeterminate\" />\r\n                Loading\r\n              </Grid>\r\n            )}\r\n            {error && error !== \"request failed\" && (\r\n              <div\r\n                style={{\r\n                  fontSize: \"2em\",\r\n                  fontFamily: \"sans-serif\",\r\n                  color: \"rgb(206, 17, 38)\",\r\n                  whiteSpace: \"pre-wrap\",\r\n                  margin: \"0px 2rem 0.75rem 0px\",\r\n                  flex: \"0 0 auto\",\r\n                  overflow: \"auto\",\r\n                }}\r\n              >\r\n                {error}\r\n              </div>\r\n            )}\r\n            {emptyNotebooksCondition && (\r\n              <h1>You have no JSColab Notebooks yet</h1>\r\n            )}\r\n            {notebooksNotEmptyCondition && (\r\n              <table className=\"table\" style={{ width: \"100%\" }}>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Notebook Name</th>\r\n                    <th>Date Created</th>\r\n                    <th style={{ width: \"0.1%\", whiteSpace: \"nowrap\" }}>\r\n                      Action\r\n                    </th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>{notebooks && user && renderedNotebooks}</tbody>\r\n              </table>\r\n            )}\r\n          </section>\r\n          <footer className=\"modal-card-foot\">\r\n            <a className=\"button is-primary\" href=\"/createNotebook\">\r\n              New Notebook\r\n            </a>\r\n          </footer>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\CreateNotebook.tsx",["163"],"import axios from \"axios\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { Navbar } from \"../components/Navbar\";\r\nimport { auth } from \"../firebase\";\r\nimport { Notebook } from \"../state/notebook\";\r\n\r\nexport const CreateNotebook: React.FC = () => {\r\n  const [user, loading] = useAuthState(auth);\r\n  const [name, setName] = useState(\"\");\r\n  const [openModal, setopenModal] = useState(true);\r\n  const errRef = useRef(\"\");\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const SaveEmptyNotebook = async () => {\r\n    \r\n    if (!user || !user.email) {\r\n      return;\r\n    }\r\n    let payload = {\r\n      cells: [],\r\n      name,\r\n      owner_email: user.email,\r\n    };\r\n    try {\r\n      let { data } = await axios.post(\r\n        `${REACT_APP_API_URL}/createNotebook`,\r\n        payload\r\n      );\r\n      const notebook: Notebook = data;\r\n\r\n      localStorage.setItem(`notebook_${notebook.id}`, JSON.stringify(notebook));\r\n      navigate(`/notebook/${notebook.id}`);\r\n    } catch (error: any) {\r\n      errRef.current = error.message;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (loading) return;\r\n    if (!user) navigate(`/login/${btoa(window.location.pathname.slice(1))}`);\r\n  }, [user, loading]);\r\n\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <Modal\r\n        openModal={openModal}\r\n        setopenModal={setopenModal}\r\n        customFunction={()=>navigate(-1)}\r\n        title={\"Create JSColab Notebook\"}\r\n        footerContent={\r\n          <>\r\n            <button className=\"button is-primary\"  onClick={e => name && SaveEmptyNotebook()}>\r\n              Save Changes\r\n            </button>\r\n            <button className=\"button\" onClick={() => navigate('/notebooks')} >\r\n              Cancel\r\n            </button>\r\n          </>\r\n        }\r\n      >\r\n        <div className=\"field\">\r\n          <label className=\"label\">Notebook Name</label>\r\n          <div className=\"control\">\r\n            <input\r\n              className=\"input\"\r\n              required\r\n              type=\"text\"\r\n              placeholder=\"My website prototype..\"\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Modal>\r\n\r\n    \r\n    </>\r\n  );\r\n};\r\n","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\pages\\Help.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\auth\\Login.tsx",["164","165"],"import { useEffect } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport \"../../css/auth/Login.css\";\r\nimport { auth, signInWithGoogle } from \"../../firebase\";\r\nimport { useActions } from \"../../hooks/use-actions\";\r\nimport { Navbar } from \"../Navbar\";\r\nfunction Login() {\r\n  // const userEmail = useTypedSelector((state) => state.user.email);\r\n  const { referrer } = useParams();\r\n  const [user, loading, error] = useAuthState(auth);\r\n  const { loginUser } = useActions();\r\n  const navigate = useNavigate();\r\n  useEffect(() => {\r\n    // if (loading) {\r\n    //   // maybe trigger a loading screen\r\n    //   return;\r\n    // }\r\n    if (user) {\r\n      console.log(\"success\");\r\n      const fn = async () => {\r\n        await loginUser(user.email as string);\r\n        console.log(`referrer: ${referrer}`);\r\n        if (referrer) navigate(`/${atob(referrer)}`);\r\n        else navigate(\"/\");\r\n      };\r\n      try {\r\n        fn();\r\n      } catch (error: any) {\r\n        console.log(error.message);\r\n      }\r\n    }\r\n  }, [user, loading]);\r\n  return (\r\n    <>\r\n      <Navbar />\r\n      <div className=\"modal is-active\">\r\n        <div className=\"modal-background\" />\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">\r\n              Login so you can create and edit JS notebooks\r\n            </p>\r\n            <button\r\n              className=\"delete\"\r\n              aria-label=\"close\"\r\n              onClick={(e) => navigate(-1)}\r\n            />\r\n          </header>\r\n          <section className=\"modal-card-body\">\r\n            <div className=\"login__container\">\r\n              <button\r\n                className=\"login__btn button is-primary\"\r\n                onClick={async () => {\r\n                  await signInWithGoogle();\r\n                }}\r\n              >\r\n                Login with Google\r\n              </button>\r\n            </div>\r\n          </section>\r\n          <footer className=\"modal-card-foot\"></footer>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n    // <div className=\"login\">\r\n    //   <div className=\"login__container\">\r\n    //     <button className=\"login__btn login__google\" onClick={signInWithGoogle}>\r\n    //       Login with Google\r\n    //     </button>\r\n    //     <div>\r\n    //       <Link to=\"/reset\">Forgot Password</Link>\r\n    //     </div>\r\n    //     <div>\r\n    //       Don't have an account? <Link to=\"/register\">Register</Link> now.\r\n    //     </div>\r\n    //   </div>\r\n    // </div>\r\n  );\r\n}\r\nexport default Login;\r\n","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\index.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\firebase.js",[],["166","167"],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\fetchNotebook.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\use-actions.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\utils\\getNotebooks.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\Navbar.tsx",["168","169","170","171","172"],"import { CircularProgress, Grid } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAuthState } from \"react-firebase-hooks/auth\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { auth, logout } from \"../firebase\";\r\nimport { logoutUser } from \"../state/action-creators\";\r\nimport \"../css/Navbar.css\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n  const [user, loading] = useAuthState(auth);\r\n  const [isActive, setisActive] = useState(false);\r\n  useEffect(() => {\r\n    if (loading) return;\r\n  }, [user, loading]);\r\n\r\n  return (\r\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\r\n      <div className=\"navbar-brand\">\r\n        <a className=\"navbar-item\" href=\"/\">\r\n          <img\r\n            src={`${process.env.PUBLIC_URL}/jscolab.png`}\r\n            width={112}\r\n            height={28}\r\n          />\r\n        </a>\r\n        <a\r\n          role=\"button\"\r\n          className={`navbar-burger burger ${isActive ? \"is-active\" : \"\"}`}\r\n          aria-label=\"menu\"\r\n          aria-expanded=\"true\"\r\n          data-target=\"navbarBasicExample\"\r\n          onClick={(e) => setisActive(!isActive)}\r\n        >\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n          <span aria-hidden=\"true\" />\r\n        </a>\r\n      </div>\r\n      <div\r\n        id=\"navbarBasicExample\"\r\n        className={`navbar-menu ${isActive ? \"is-active\" : \"\"}`}\r\n      >\r\n        <div className=\"navbar-start\">\r\n          <a className=\"navbar-item\" href=\"/\">\r\n            Home\r\n          </a>\r\n          <a className=\"navbar-item\" href=\"/help\">\r\n            Documentation\r\n          </a>\r\n          <a className=\"navbar-item grow\" href=\"/createNotebook\">\r\n            Create A Notebook\r\n          </a>\r\n          <div className=\"navbar-item has-dropdown is-hoverable\">\r\n            <a className=\"navbar-link\">More</a>\r\n            <div className=\"navbar-dropdown\">\r\n              <a\r\n                className=\"navbar-item\"\r\n                href=\"https://github.com/AssaadHalabi/JsColab\"\r\n              >\r\n                Report an issue\r\n              </a>\r\n              <a\r\n                className=\"navbar-item\"\r\n                href=\"https://assaadportfolio.herokuapp.com\"\r\n              >\r\n                Contact us\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"navbar-end\">\r\n          <div className=\"navbar-item has-dropdown is-hoverable\">\r\n            {loading && (\r\n              <Grid item>\r\n                <CircularProgress variant=\"indeterminate\" />\r\n                Loading\r\n              </Grid>\r\n            )}\r\n            {user && !loading ? (\r\n              <div className=\"navbar-item has-dropdown is-hoverable\">\r\n                <a className=\"navbar-link\" style={{ color: \"#EFC901\" }}>\r\n                  {user.email}\r\n                </a>\r\n                <div className=\"navbar-dropdown\">\r\n                  <a\r\n                    className=\"navbar-item is-size-6\"\r\n                    style={{ color: \"#EFC901\" }}\r\n                    href=\"/notebooks\"\r\n                  >\r\n                    My Notebooks\r\n                  </a>\r\n                  <a\r\n                    className=\"navbar-item is-size-6\"\r\n                    onClick={(e) => {\r\n                      logoutUser();\r\n                      logout();\r\n                    }}\r\n                  >\r\n                    Logout\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            ) : (\r\n              !loading && (\r\n                <div className=\"navbar-item\">\r\n                  <div className=\"buttons\">\r\n                    <Link to={\"/login\"} className=\"button is-primary\">\r\n                      Log in\r\n                    </Link>\r\n                  </div>\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\Modal.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\cell-list.tsx",["173"],"import { Fragment, useEffect, useRef } from \"react\";\r\nimport \"../../css/editors/cell-list.css\";\r\nimport { useActions } from \"../../hooks/use-actions\";\r\nimport { useTypedSelector } from \"../../hooks/use-typed-selector\";\r\nimport { Notebook } from \"../../state/notebook\";\r\nimport AddCell from \"./add-cell\";\r\nimport CellListItem from \"./cell-list-item\";\r\n\r\ninterface CellListProps {\r\n  notebook: Notebook;\r\n  user: any;\r\n}\r\n\r\nconst CellList: React.FC<CellListProps> = ({ notebook, user }) => {\r\n  const cells = useTypedSelector(({ cells: { order, data } }) =>\r\n    order.map((id) => data[id])\r\n  );\r\n  // const userEmail = useTypedSelector((state) => state.user.email);\r\n  const { fetchCells } = useActions();\r\n  const errRef = useRef(\"\");\r\n  errRef.current = \"\";\r\n  useEffect(() => {\r\n    if (!notebook) {\r\n      errRef.current = \"Notebook not found\";\r\n    }\r\n    try {\r\n      fetchCells(notebook.id);\r\n      console.log('after fetch cells');\r\n      console.log(`cells ${JSON.stringify(cells)}`);\r\n      \r\n    } catch (error: any) {\r\n      errRef.current = error.message;\r\n    }\r\n  }, []);\r\n\r\n  const renderedCells = cells.map((cell) => (\r\n    <Fragment key={cell.uuid}>\r\n      <CellListItem cell={cell} user={user} notebook={notebook}/>\r\n      <AddCell previousCellId={cell.uuid} user={user} notebook={notebook}/>\r\n    </Fragment>\r\n  ));\r\n\r\n  const errorOutput =\r\n    errRef.current === \"Notebook not found\" && user ? (\r\n      <div className=\"modal\">\r\n        <div className=\"modal-background\" />\r\n        <div className=\"modal-card\">\r\n          <header className=\"modal-card-head\">\r\n            <p className=\"modal-card-title\">Oops.. An Error has occurred</p>\r\n            <button className=\"delete\" aria-label=\"close\" />\r\n          </header>\r\n          <section className=\"modal-card-body\">{errRef.current}</section>\r\n          <footer className=\"modal-card-foot\">\r\n            <a className=\"button is-primary\" href=\"/createNotebook\">\r\n              Create Notebook\r\n            </a>\r\n            <a className=\"button is-secondary\" href={`/notebooks`}>\r\n              Your Notebooks\r\n            </a>\r\n          </footer>\r\n        </div>\r\n        : <div>{errRef.current}</div>\r\n      </div>\r\n    ) : (\r\n      <>{errRef.current}</>\r\n    );\r\n\r\n  if (errRef.current) {\r\n    return <>{errorOutput}</>;\r\n  } else {\r\n    return (\r\n      <div className=\"cell-list\">\r\n        <AddCell forceVisible={cells.length === 0} previousCellId={null} user={user} notebook={notebook} />\r\n        {renderedCells}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CellList;\r\n","C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\store.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\cell.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\use-typed-selector.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\add-cell.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\cell-list-item.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\action-creators\\index.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\index.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\middlewares\\persist-middlware.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\action-bar.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\code-cell.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\text-editor.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\bundlesReducer.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\userReducer.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\reducers\\cellsReducer.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\hooks\\use-cumulative-code.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\resizable.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\state\\action-types\\index.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\preview.tsx",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\bundler\\index.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\bundler\\plugins\\fetch-plugin.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\bundler\\plugins\\unpkg-path-plugin.ts",[],"C:\\Project\\JsColabDigitalOcean\\Frontend\\src\\components\\editors\\code-editor.tsx",[],{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","severity":1,"message":"179","line":37,"column":6,"nodeType":"180","endLine":37,"endColumn":21,"suggestions":"181"},{"ruleId":"182","severity":1,"message":"183","line":52,"column":20,"nodeType":"184","messageId":"185","endLine":52,"endColumn":21},{"ruleId":"178","severity":1,"message":"186","line":64,"column":6,"nodeType":"180","endLine":64,"endColumn":21,"suggestions":"187"},{"ruleId":"178","severity":1,"message":"186","line":45,"column":6,"nodeType":"180","endLine":45,"endColumn":21,"suggestions":"188"},{"ruleId":"189","severity":1,"message":"190","line":11,"column":25,"nodeType":"191","messageId":"192","endLine":11,"endColumn":30},{"ruleId":"178","severity":1,"message":"193","line":33,"column":6,"nodeType":"180","endLine":33,"endColumn":21,"suggestions":"194"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"195","severity":1,"message":"196","line":20,"column":11,"nodeType":"197","endLine":24,"endColumn":13},{"ruleId":"198","severity":1,"message":"199","line":26,"column":9,"nodeType":"197","endLine":33,"endColumn":10},{"ruleId":"198","severity":1,"message":"199","line":54,"column":13,"nodeType":"197","endLine":54,"endColumn":40},{"ruleId":"198","severity":1,"message":"199","line":81,"column":17,"nodeType":"197","endLine":81,"endColumn":73},{"ruleId":"198","severity":1,"message":"199","line":92,"column":19,"nodeType":"197","endLine":98,"endColumn":20},{"ruleId":"178","severity":1,"message":"200","line":34,"column":6,"nodeType":"180","endLine":34,"endColumn":8,"suggestions":"201"},"no-native-reassign",["202"],"no-negated-in-lhs",["203"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'navigate' and 'notebook_id'. Either include them or remove the dependency array.","ArrayExpression",["204"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["205"],["206"],"@typescript-eslint/no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'loginUser', 'navigate', and 'referrer'. Either include them or remove the dependency array.",["207"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'cells', 'fetchCells', and 'notebook'. Either include them or remove the dependency array.",["208"],"no-global-assign","no-unsafe-negation",{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},{"desc":"211","fix":"213"},{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},"Update the dependencies array to be: [user, loading, navigate, notebook_id]",{"range":"218","text":"219"},"Update the dependencies array to be: [user, loading, navigate]",{"range":"220","text":"221"},{"range":"222","text":"221"},"Update the dependencies array to be: [user, loading, loginUser, referrer, navigate]",{"range":"223","text":"224"},"Update the dependencies array to be: [cells, fetchCells, notebook]",{"range":"225","text":"226"},[1401,1416],"[user, loading, navigate, notebook_id]",[2323,2338],"[user, loading, navigate]",[1317,1332],[1098,1113],"[user, loading, loginUser, referrer, navigate]",[1082,1084],"[cells, fetchCells, notebook]"]